lHnls<-log(HoenigNLS)
lHeonigNLSres <- lThenM - lHnls
plot(lHnls,lHeonigNLSres)
lm(lHeonigNLSres~lHnls)
abline(-0.03339,0.10921)
abline(0,0,lty=3)
HC1par<-5.4/ThenAmax
lHC1par<-log(HC1par)
lHC1parres<-lThenM-lHC1par
plot(lHC1par,lHC1parres)
lm(lHC1parres~lHC1par)
abline(0.01574,0.01603)
abline(0,0,lty=3)
plot(HoenigNLS,ThenM-HoenigNLS,xlim=c(0,5), ylim=c(-2,2))
nls(ThenM~coeff*invThenAmax-1, start = list(coeff=5))
summary(nls(lThenM~coeff-lThenAmax, start = list(coeff=2)))
summary(nls(ThenM~a/(ThenAmax^b), start = list(a=4.9,b = .9)))
summary(nls(lThenM~a-b*lThenAmax, start = list(a=2,b = .9)))
ThenM<-c(0.04,0.04,0.02,0.01,0.03,0.04,0.05,0.07,0.08,0.04,0.04,0.09,0.05,0.07,0.14,0.18,0.09,0.07,0.11,0.11,0.08,0.04,0.20,0.07,0.13,0.12,0.15,0.07,0.11,0.08,0.22,0.15,0.20,0.10,0.22,0.10,0.13,0.16,0.09,0.15,0.23,0.19,0.26,0.16,0.29,0.15,0.18,0.08,0.12,0.35,0.15,0.17,0.11,0.15,0.11,0.20,0.18,0.35,0.18,0.30,0.21,0.15,0.18,0.27,0.15,0.14,0.17,0.18,0.37,0.13,0.19,0.17,0.15,0.35,0.38,0.24,0.35,0.57,0.17,0.21,0.29,0.12,0.15,0.26,0.25,0.45,0.20,0.24,0.18,0.23,0.21,0.30,0.26,0.26,0.36,0.20,0.15,0.61,0.21,0.24,0.24,0.22,0.56,0.44,0.48,0.36,0.39,0.41,0.67,0.44,0.26,0.30,0.30,0.56,0.37,0.46,0.62,0.40,0.63,0.33,0.43,0.05,1.20,0.52,0.32,0.43,0.25,0.58,0.44,0.34,0.39,0.56,0.22,0.33,0.41,0.49,0.40,0.30,0.60,0.54,0.59,1.27,0.39,0.55,0.37,0.29,0.45,1.00,0.54,0.45,1.17,1.60,1.33,1.25,0.65,0.94,0.87,0.84,1.07,0.49,0.27,0.43,0.90,1.28,1.18,0.88,0.56,1.58,0.55,0.91,0.86,1.07,0.46,0.63,0.66,0.97,0.79,0.61,1.10,0.80,0.74,1.20,0.92,1.09,0.68,0.49,0.69,1.60,1.49,0.80,0.79,1.15,0.98,0.99,1.22,1.96,1.17,0.91,0.99,2.26,1.73,1.30,0.97,1.29,1.09,0.63,1.93,1.10,1.06,0.97,0.52,0.67,1.82,0.67,2.36,1.10,1.58,1.82,1.71,3.30,2.72,4.30,3.82,4.05,4.87,5.07,7.92,49.57,0.55,0.22,2.60)
Thenk<-c(0.05,0.05,0.04,0.21,0.03,0.03,0.13,0.01,0.06,0.13,0.14,0.04,0.09,0.09,0.13,0.02,0.10,0.20,0.03,0.02,0.13,0.19,0.08,0.19,0.18,0.24,0.09,0.10,0.11,0.19,0.15,0.07,0.18,0.17,0.19,0.16,0.16,NA,0.13,0.19,0.17,0.07,0.08,0.17,0.06,0.39,0.07,1.35,0.23,0.11,0.31,0.10,0.05,0.28,NA,0.15,0.23,0.08,0.22,0.24,0.20,0.75,0.09,0.08,0.08,0.14,0.57,0.11,0.23,0.11,0.08,0.10,0.24,0.32,0.24,0.15,0.17,0.14,0.19,0.08,0.15,0.24,0.35,0.13,0.04,0.09,0.45,0.77,0.30,NA,0.20,0.70,0.35,NA,0.11,0.10,0.10,0.12,0.20,0.18,0.15,0.21,0.20,0.40,0.24,0.13,0.31,0.24,0.34,0.10,0.16,0.28,0.24,0.28,0.14,0.29,0.21,0.09,0.40,0.51,0.12,0.49,0.23,0.13,0.43,0.08,0.21,0.56,0.62,0.85,0.21,0.48,0.37,0.16,0.22,0.33,1.11,0.26,0.17,0.25,0.20,0.27,0.14,0.52,0.39,0.19,0.33,0.34,NA,0.12,0.33,1.30,0.25,0.45,0.20,0.12,0.51,0.31,0.26,1.15,0.60,0.70,0.71,0.36,0.53,0.22,0.13,0.11,0.19,0.89,0.32,0.22,0.29,1.18,0.34,0.30,0.35,0.44,0.77,0.38,0.18,0.67,0.33,0.25,NA,0.54,NA,0.41,0.49,0.89,0.30,0.55,0.28,0.57,0.57,NA,0.44,0.45,0.35,0.78,0.42,0.42,0.18,0.35,0.48,0.60,0.66,0.67,1.16,1.10,0.31,NA,NA,0.53,0.23,1.40,0.07,1.07,0.35,0.92,0.68,1.10,1.83,1.46,2.56,1.46,NA,NA,0.63,0.14,0.57)
ThenL<-c(547.4,385.5,659.6,423.0,708.0,477.0,426.0,700.0,1004.5,319.8,533.0,2009.0,568.0,396.0,463.0,3164.0,777.0,435.0,324.0,566.1,700.6,1114.0,1345.0,486.0,659.5,890.0,338.0,349.0,563.7,446.2,643.0,764.6,506.8,383.0,1832.0,1600.0,874.4,NA,982.0,288.0,538.0,1145.0,907.0,1306.2,698.0,584.5,600.0,182.2,622.8,973.2,206.9,1278.0,419.5,573.1,NA,569.6,377.0,700.0,463.0,515.0,1134.0,103.8,1320.0,623.0,512.0,512.7,152.0,2800.0,520.6,772.2,1015.0,800.0,464.3,497.6,348.4,265.2,717.0,447.0,1153.0,654.7,1082.0,1222.0,330.1,765.4,566.9,829.0,313.0,255.4,410.0,NA,691.0,93.6,575.0,NA,396.0,514.5,711.9,1648.0,308.0,594.0,425.0,730.0,464.0,594.3,1690.0,379.4,372.2,459.3,548.3,763.0,556.0,1205.0,1000.0,450.9,650.0,1067.0,1412.5,764.0,277.3,302.8,821.7,1155.5,194.4,421.7,291.1,591.0,422.4,282.5,154.1,245.3,600.0,270.0,1200.0,211.0,1137.0,347.0,107.3,468.6,380.0,378.0,335.0,296.0,891.2,377.0,349.7,552.2,500.5,262.0,NA,516.3,280.5,651.0,417.0,227.6,53.0,96.0,274.1,364.0,142.0,158.2,280.6,168.0,173.0,185.0,248.2,669.6,688.0,271.5,257.6,156.6,1221.4,264.0,695.0,692.4,1150.0,165.5,327.0,151.0,160.0,584.0,239.6,99.0,233.1,1664.0,NA,203.7,NA,342.4,215.5,119.1,170.0,174.0,227.6,68.2,197.6,NA,230.0,75.0,386.0,325.5,245.0,141.0,92.4,117.0,252.7,155.0,224.2,79.6,50.8,50.5,305.4,NA,NA,206.6,129.3,169.8,70.1,69.5,165.3,89.3,48.5,77.1,114.4,117.1,106.1,64.8,NA,NA,340.0,1696.5,450.0)
ThenAmax<-c(205,142,121,105,104,100,100,89,85,84,84,82,80,78,72,71,70,61,60,58,57,56,55,53,52,52,46,46,45,45,43,42,42,42,41,40,40,38,36,36,35,34,33,33,33,32,32,31,31,31,31,31,31,30.75,30,29,28,28,28,27,27,27,27,27,27,26,25,25,25,25,25,25,24,24,24,24,24,23,23,23,22,21.9,21,21,20,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17,16,16,16,16,16,16,16,15,15,15,14,14,14,14,14,14,14,14,14,14,13.7,13,13,13,13,13,13,13,12,12,11,11,11,11,11,11,11,11,10.5,10.4,10.4,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,5.5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,2,1.4,1.25,1.13,1.03,0.99,0.88,0.73,0.16,NA,NA,NA)
ThenT<-c(10,11,5.4,12.5,8,10.4,5.4,4.5,16,5.4,5.4,8,5.4,19.5,5.4,10,18,7,9,6,13,17.5,5,8.5,26.9,22.6,13.5,5.4,7.5,14,17.1,6.5,12.5,5.4,17,17,21,13,6,27,9,8.7,18,21,16.9,25.9,15,24.3,26.9,14,25.7,26.9,20.4,24.4,26,14,12,16.6,5,17.1,10,24,22.5,21,5,26.9,25.5,7,24.8,27.5,4,7,13,8,21,25.7,25,18,8,17,26.9,24.8,26.9,6.9,5.2,25,25.7,26,7.6,10.1,26,24,22.5,9.1,17,27.8,25,26,9,18,17,14,12,13,23,12,11.2,14,8,24,10,20,9,25.7,18,22.2,25,27,15.1,23.1,18,25,12,10.3,24,27.5,16,26,10,25.7,25,10,13.2,12.7,24.7,12.5,24,5,5,20.6,20.6,20.6,25,20,15,8,16.5,8,15.5,10.3,15.5,23,18,4,12.7,12.7,30,17.7,16.9,26,27.2,17.6,16,7,16.8,15.5,6,18,12,23.1,27,14,17,25,22.3,15,20,7,11,16,26,23.5,5.9,23,18,18,4.6,12,9,6.5,17,12,15.6,9,18.2,20,12,6.5,20,17,28,5,9.3,17.5,24.5,11.5,25.8,9,10,14,28,9.4,6.2,27,15,15,12,26,18,10,18.4,25.8,25.8,25.8,25.8,25.8,27.5,27.5,27,5,28)
plot(ThenAmax,ThenM,xlab = "Then Maximum Age Data",ylab = "Then Natural Mortality Data")
#Residuals
data.M<-data.frame(ln_Amax=lThenAmax,ln_M=lThenM)
lm.M<-lm(ln_M~ln_Amax,data=data.M)
res <- resid(lm.M)
plot(fitted(lm.M), res)
abline(h=0)
plot(lThenAmax,lThenM,xlab = "ln Amax",ylab = "ln M")
abline(1.68642,-1)
abline(log(4.899),-.916,lty=3)
legend(1,4,c("Hamel/Cope","Then NLS"),lty=c(1,3))
plot(ThenAmax,ThenM,xlab = "Amax",ylab = "M")
plot(ThenAmax,ThenM,xlab = "Amax",ylab = "M",ylim=c(0,2),xlim = c(0,50))
plot(ThenAmax,ThenM,xlab = "Amax",ylab = "M",ylim=c(0,.3),xlim = c(49,150))
x<-c(45000:155000/1000)
lines(x,exp(1.68642)/x)
lines(x,4.899/(x^0.916),lty=3)
legend(80,.3,c("Hamel/Cope", "Then NLS"),lty=c(1,3))
par(mfrow=c(1,2))
HoenigNLS <-4.899*(ThenAmax^-0.916)
lHnls<-log(HoenigNLS)
lHeonigNLSres <- lThenM - lHnls
plot(lHnls,lHeonigNLSres)
lm(lHeonigNLSres~lHnls)
abline(-0.03339,0.10921)
abline(0,0,lty=3)
HC1par<-5.4/ThenAmax
lHC1par<-log(HC1par)
lHC1parres<-lThenM-lHC1par
plot(lHC1par,lHC1parres)
lm(lHC1parres~lHC1par)
abline(0.01574,0.01603)
abline(0,0,lty=3)
plot(HoenigNLS,ThenM-HoenigNLS,xlim=c(0,5), ylim=c(-2,2))
plot(HoenigNLS,ThenM-HoenigNLS,xlim=c(0,5), ylim=c(-2,2))
nls(ThenM~coeff*invThenAmax-1, start = list(coeff=5))
summary(nls(lThenM~coeff-lThenAmax, start = list(coeff=2)))
summary(nls(ThenM~a/(ThenAmax^b), start = list(a=4.9,b = .9)))
summary(nls(lThenM~a-b*lThenAmax, start = list(a=2,b = .9)))
#####################
Hamel.resids<-(lThenM-Hamel.pred)
Then.resids<-(lThenM-Then.pred)
Hamel.residsReal<-(ThenM-exp(Hamel.pred))
Then.residsReal<-(ThenM-exp(Then.pred))
Then.M.Amax.preds.df<-data.frame(M=ThenM,Amax=ThenAmax,HC=exp(1.68642)/ThenAmax,TNLS=4.899/(ThenAmax^0.916),ltype=factor(c(1,3)))
length(ThenM)
length(ThenAmax)
length(exp(1.68642)/ThenAmax)
length(4.899/(ThenAmax^0.916)
)
ggplot(Preds.df,aes(log(Amax),log(Pred)))+
geom_point(shape = 21, colour = "black", fill = "white",size=3)+
geom_abline(aes(intercept=intercept, slope=slope, linetype=linetype), data=linedf, show_guide = TRUE,lwd=1.2)+
#  geom_abline(aes(intercept=,slope=,linetype=c(1,3)),lwd=1.2)+
#  geom_abline(aes(intercept=,slope=,linetype=c(1,3)),lty=3,lwd=1.2)+
theme_bw()+
theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14),
legend.position = c(0.8,0.9),legend.text=element_text(size = c(16,16)))+
scale_color_manual(name = "",
breaks=c("black", "blue"),
labels = c("Hamel & Cope", "Then NLS"))+
scale_linetype_manual(name = "",
values=c(1,3),
labels = c("Hamel & Cope", "Then NLS"))
ggplot(Then.M.Amax.preds.df,aes(Amax,M))+
geom_point(shape = 21, colour = "black", fill = "white",size=3)+
geom_line(data=Preds.df,aes(Amax,Pred,group=Source,linetype=ltype), size=1)+
xlim(0,50)+
ylim(0,2)+
theme_bw()+
theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14),
legend.position = c(0.8,0.9),legend.text=element_text(size = c(16,16)))+
#  scale_color_manual(name="",values = c("black","blue"),labels=c("Hamel & Cope","Then NLS"))+
scale_linetype_manual(name = "", values=c(1,3),labels=c("Hamel & Cope","Then NLS"))
Then.M.Amax.preds.df<-data.frame(M=ThenM,Amax=ThenAmax,HC=exp(1.68642)/ThenAmax,TNLS=4.899/(ThenAmax^0.916),ltype=factor(c(1,3)))
factor(c(1,3))
Preds.df
plot(log(ThenAmax),log(exp(1.68642)/ThenAmax))
Amax_M.dat<-data.frame(Amax=lThenAmax,M=lThenM)
ggplot(Amax_M.dat,aes(Amax,M))+
geom_point()
linedf<-data.frame(intercept=c(1.68642,log(4.899)),slope=c(-1,-.916),linetype=factor(c(1,3)))
linedf
ggplot(Amax_M.dat,aes(Amax,M))+
geom_point(shape = 21, colour = "black", fill = "white",size=3)+
geom_abline(aes(intercept=intercept, slope=slope, linetype=linetype), data=linedf, show_guide = TRUE,lwd=1.2)+
theme_bw()+
theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14),
legend.position = c(0.8,0.9),legend.text=element_text(size = c(16,16)))+
scale_color_manual(name = "",
breaks=c("black", "blue"),
labels = c("Hamel & Cope", "Then NLS"))+
scale_linetype_manual(name = "",
values=c(1,3),
labels = c("Hamel & Cope", "Then NLS"))
ggplot(Amax_M.dat,aes(Amax,M))+
geom_point(shape = 21, colour = "black", fill = "white",size=3)+
xlab("Maximum Age")+
ylab("Natural Mortality Rate")+
geom_abline(aes(intercept=intercept, slope=slope, linetype=linetype), data=linedf, show_guide = TRUE,lwd=1.2)+
theme_bw()+
theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14),
legend.position = c(0.8,0.9),legend.text=element_text(size = c(16,16)))+
scale_color_manual(name = "",
breaks=c("black", "blue"),
labels = c("Hamel & Cope", "Then NLS"))+
scale_linetype_manual(name = "",
values=c(1,3),
labels = c("Hamel & Cope", "Then NLS"))
p1<-ggplot(Then.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("Residual")
p2<-ggplot(Then.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("")
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("Residual")
p4<-ggplot(Hamel.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("")
grid.arrange(p1,p2,p3,p4,nrow=2)
p1<-ggplot(Then.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("Residual")+
title("Then")
p2<-ggplot(Then.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("")
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("Residual")+
title("Hamel & Cope")
p4<-ggplot(Hamel.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("")
grid.arrange(p1,p2,p3,p4,nrow=2)
p1<-ggplot(Then.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("Residual")+
labs(title="Then")
p2<-ggplot(Then.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("")
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("Residual")+
labs(title="Hamel & Cope")
p4<-ggplot(Hamel.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("")
grid.arrange(p1,p2,p3,p4,nrow=2)
grid.arrange(p1,p3,p2,p4,nrow=2)
par(mfrow=c(2,2))
plot(ThenAmax,Then.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Then residuals (real-space)")
plot(ThenAmax,Then.resids, xlab="Maximum Age",ylab="Then residuals (log-space)")
plot(ThenAmax,Hamel.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Hamel/Cope residuals (real-space)")
plot(ThenAmax,Hamel.resids, xlab="Maximum Age",ylab="Hamel/Cope residuals (log-space)")
par(mfrow=c(2,2))
plot(ThenAmax,Then.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Then residuals (real-space)")
plot(ThenAmax,Then.resids, xlab="Maximum Age",ylab="Then residuals (log-space)")
plot(ThenAmax,Hamel.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Hamel/Cope residuals (real-space)")
plot(ThenAmax,Hamel.resids, xlab="Maximum Age",ylab="Hamel/Cope residuals (log-space)")
p1<-ggplot(Then.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("Residuals")+
ggtitle("Then")+theme(plot.title = element_text(hjust = 0.5))
p2<-ggplot(Then.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab(" ")+
ylab("log(Residuals)")
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
#ylab("log(Residuals)")+
labs(title="Hamel & Cope")
p4<-ggplot(Hamel.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("")
grid.arrange(p1,p3,p2,p4,nrow=2)
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
#ylab("log(Residuals)")+
ggtitle("Hamel & Cope")+theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p3,p2,p4,nrow=2)
p2<-ggplot(Then.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("log(Residuals)")
p3<-ggplot(Hamel.res.real,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("")+
#ylab("log(Residuals)")+
ggtitle("Hamel & Cope")+theme(plot.title = element_text(hjust = 0.5))
p4<-ggplot(Hamel.res,aes(M,Res))+
geom_point()+
ylim(-1.3,1.4)+
theme_bw()+
xlab("Maximum Age")+
ylab("")
grid.arrange(p1,p3,p2,p4,nrow=2)
#Figure Amax vs M data and predictions
Amax_M.dat<-data.frame(Amax=lThenAmax,M=lThenM)
ggplot(Amax_M.dat,aes(Amax,M))+
geom_point(shape = 21, colour = "black", fill = "white",size=3)+
xlab("Maximum Age")+
ylab("Natural Mortality Rate")+
geom_abline(aes(intercept=intercept, slope=slope, linetype=linetype), data=linedf, show_guide = TRUE,lwd=1.2)+
theme_bw()+
theme(axis.title.x = element_text(size = 16), axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14),axis.text.y = element_text(size = 14),
legend.position = c(0.8,0.9),legend.text=element_text(size = c(16,16)))+
scale_color_manual(name = "",
breaks=c("black", "blue"),
labels = c("Hamel & Cope", "Then NLS"))+
scale_linetype_manual(name = "",
values=c(1,3),
labels = c("Hamel & Cope", "Then NLS"))
plot(lThenAmax,lThenM,xlab = "ln Amax",ylab = "ln M")
abline(1.68642,-1)
abline(log(4.899),-.916,lty=3)
legend(1,4,c("Hamel & Cope","Then NLS"),lty=c(1,3))
Hamel.resids<-(lThenM-Hamel.pred)
Then.resids<-(lThenM-Then.pred)
Hamel.residsReal<-(ThenM-exp(Hamel.pred))
##################
#FIGURE RESIDUAL PLOT
Hamel.pred=-1*lThenAmax+1.68642
Then.pred=-0.916*lThenAmax+log(4.899)
Hamel.resids<-na.omit(lThenM-Hamel.pred)
Then.resids<-na.omit(lThenM-Then.pred)
plot(density(Hamel.resids),lwd=2,lty=3,main="",xlab="Residual")
lines(density(Then.resids),lwd=2,lty=2,col="black")
den.norm<-seq(min(c(density(Then.resids)$x,density(Hamel.resids)$x)),
max(c(density(Then.resids)$x,density(Hamel.resids)$x)),
by=0.01)
lines(den.norm,dnorm(den.norm,0,0.44),lwd=2,lty=1,col="black")
legend(0.75,0.95,c("Hamel & Cope","Then NLS","Normal distribution"),lwd=2,lty=c(3,2,1),bty="n")
x<-c(1:1000/500)
plot(x,dlnorm(x,log(.54),.31),type="l",xlab="Natural Mortality Rate", ylab = "Density")
lines(x,dlnorm(x,log(.437),.51),lty=2,lwd=2)
legend(1.5,2.5,c("Hamel & Cope","Hamel 2015"),lwd=2,lty=c(1,2),bty="n")
plot(ThenAmax,Then.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Then residuals (real-space)")
plot(ThenAmax,Then.resids, xlab="Maximum Age",ylab="Then residuals (log-space)")
plot(ThenAmax,Hamel.residsReal,ylim=c(-1.3,1.4),xlab="Maximum Age",ylab="Hamel/Cope residuals (real-space)")
#Max Age vs M
#par(mfrow=c(2,1))
plot(ThenAmax,ThenM,xlab = "Maximum Age",ylab = "Natural Mortality Rate",ylim=c(0,2),xlim = c(0,50))
x<-c(0:55000/1000)
lines(x,exp(1.68642)/x)
lines(x,4.899/(x^0.916),lty=3)
lines(x,exp(1.68642+((0.438^2)/2))/x,lty=4)
legend(40,2,c("Hamel & Cope", "Then NLS","HC Mean unbiased"),lty=c(1,3,4),bty="n")
plot(ThenAmax,ThenM,xlab = "Maximum Age",ylab = "Natural Mortality Rate",ylim=c(0,.3),xlim = c(49,150))
x<-c(45000:155000/1000)
lines(x,exp(1.68642)/x)
lines(x,4.899/(x^0.916),lty=3)
lines(x,exp(1.68642+((0.438^2))/2)/x,lty=4)
legend(80,.3,c("Hamel & Cope", "Then NLS","HC Mean unbiased"),lty=c(1,3,4),bty="n")
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
file.path(paste0(pathSensi(),"/Sensitivity Comparison Plots/",input$Sensi_comp_file,"/",input$Sensi_comp_file, '.png'))
SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(1,3),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice)
par(mfrow = c(1,3))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(1,3),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = 11,col = col.vec, new = FALSE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
par(mfrow = c(1,3))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = 11,col = col.vec, new = FALSE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
dev.off()
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30,col = col.vec, new = FALSE,print=TRUE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice,plotdir=paste0(pathSensi(),"/Sensitivity Comparison Plots/",input$Sensi_comp_file)))
par(mfrow = c(1,3))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = 11,col = col.vec, new = FALSE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(1,3),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
par(mfrow = c(1,3))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(1,3),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = 11,col = col.vec, new = FALSE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
par(mfrow = c(1,3))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = 11,col = col.vec, new = FALSE, legendloc = 'topleft',btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
modsummary.sensi
names(modsummary.sensi)
modsummary.sensi[9]
modsummary.sensi[12]
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
debug(SSplotComparisons)
try(SSplotComparisons(modsummary.sensi, legendlabels = modelnames, ylimAdj = 1.30, subplot = c(2,4),col = col.vec, new = FALSE,btarg=TRP.in,minbthresh=LRP.in,uncertainty=Sensi_uncertainty_choice))
uncertainty
uncertainty
uncertainty
!any(uncertainty)
quantsSD
modsummary.sensi$quantsSD
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
shiny::runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
Q
Q
shiny::runApp('Github/SS-DL-tool')
modsummary.sensi[, 1]
modsummary.sensi
names(modsummary.sensi)
modsummary.sensi$quantsSD[, 1]
all(is.na(modsummary.sensi$quantsSD[, 1])
)
modsummary.sensi$quantsSD[, 1] == 0
all(is.na(modsummary.sensi$quantsSD[, 1]) | modsummary.sensi$quantsSD[, 1] == 0)
runApp('Github/SS-DL-tool')
all(is.na(modsummary.sensi$quantsSD[, 1]) | modsummary.sensi$quantsSD[, 1] == 0)
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/Natural-Mortality-Tool')
remotes::install_github("r4ss/r4ss")
remotes::install_github("r4ss/r4ss")
install.packages(c("covr", "knitr", "rmarkdown"))
install.packages(c("admisc", "arkdb", "bookdown", "broom", "chk", "cli", "conquer", "covr", "crul", "datamods", "datawizard", "desc", "DescTools", "DHARMa", "dismo", "distributional", "dplyr", "DT", "duckdb", "emmeans", "esquisse", "FactoMineR", "flextable", "future", "future.apply", "gargle", "gert", "gganimate", "ggfun", "gh", "gitcreds", "globals", "gtable", "httpuv", "hunspell", "insight", "janeaustenr", "lgr", "lifecycle", "lintr", "lpSolve", "Matrix", "MatrixExtra", "MatrixModels", "officer", "openssl", "posterior", "progressr", "proxyC", "quanteda", "quanteda.textmodels", "quanteda.textplots", "quanteda.textstats", "R.matlab", "raster", "RcppArmadillo", "reticulate", "rlang", "rotor", "rsparse", "RSQLite", "rstan", "rticles", "rversions", "scatterplot3d", "shinyWidgets", "spData", "statnet.common", "terra", "text2vec", "textdata", "tidyr", "tweenr", "urca", "webmockr", "xfun", "ypr", "zip", "zoo"))
install.packages(c("admisc", "arkdb", "bookdown", "broom", "chk", "cli", "conquer", "covr", "crul", "datamods", "datawizard", "desc", "DescTools", "DHARMa", "dismo", "distributional", "dplyr", "DT", "duckdb", "emmeans", "esquisse", "FactoMineR", "flextable", "future", "future.apply", "gargle", "gert", "gganimate", "ggfun", "gh", "gitcreds", "globals", "gtable", "httpuv", "hunspell", "insight", "janeaustenr", "lgr", "lifecycle", "lintr", "lpSolve", "Matrix", "MatrixExtra", "MatrixModels", "officer", "openssl", "posterior", "progressr", "proxyC", "quanteda", "quanteda.textmodels", "quanteda.textplots", "quanteda.textstats", "R.matlab", "raster", "RcppArmadillo", "reticulate", "rlang", "rotor", "rsparse", "RSQLite", "rstan", "rticles", "rversions", "scatterplot3d", "shinyWidgets", "spData", "statnet.common", "terra", "text2vec", "textdata", "tidyr", "tweenr", "urca", "webmockr", "xfun", "ypr", "zip", "zoo"))
install.packages(c("admisc", "arkdb", "bookdown", "broom", "chk", "cli", "conquer", "covr", "crul", "datamods", "datawizard", "desc", "DescTools", "DHARMa", "dismo", "distributional", "dplyr", "DT", "duckdb", "emmeans", "esquisse", "FactoMineR", "flextable", "future", "future.apply", "gargle", "gert", "gganimate", "ggfun", "gh", "gitcreds", "globals", "gtable", "httpuv", "hunspell", "insight", "janeaustenr", "lgr", "lifecycle", "lintr", "lpSolve", "Matrix", "MatrixExtra", "MatrixModels", "officer", "openssl", "posterior", "progressr", "proxyC", "quanteda", "quanteda.textmodels", "quanteda.textplots", "quanteda.textstats", "R.matlab", "raster", "RcppArmadillo", "reticulate", "rlang", "rotor", "rsparse", "RSQLite", "rstan", "rticles", "rversions", "scatterplot3d", "shinyWidgets", "spData", "statnet.common", "terra", "text2vec", "textdata", "tidyr", "tweenr", "urca", "webmockr", "xfun", "ypr", "zip", "zoo"))
install.packages(c("admisc", "arkdb", "bookdown", "broom", "chk", "cli", "conquer", "covr", "crul", "datamods", "datawizard", "desc", "DescTools", "DHARMa", "dismo", "distributional", "dplyr", "DT", "duckdb", "emmeans", "esquisse", "FactoMineR", "flextable", "future", "future.apply", "gargle", "gert", "gganimate", "ggfun", "gh", "gitcreds", "globals", "gtable", "httpuv", "hunspell", "insight", "janeaustenr", "lgr", "lifecycle", "lintr", "lpSolve", "Matrix", "MatrixExtra", "MatrixModels", "officer", "openssl", "posterior", "progressr", "proxyC", "quanteda", "quanteda.textmodels", "quanteda.textplots", "quanteda.textstats", "R.matlab", "raster", "RcppArmadillo", "reticulate", "rlang", "rotor", "rsparse", "RSQLite", "rstan", "rticles", "rversions", "scatterplot3d", "shinyWidgets", "spData", "statnet.common", "terra", "text2vec", "textdata", "tidyr", "tweenr", "urca", "webmockr", "xfun", "ypr", "zip", "zoo"))
library(devtools)
devtools::install_github("shcaba/SSS", build_vignettes = TRUE)
install.packages("remotes")
remotes::install_github("r4ss/r4ss")
install.packages("remotes")
350/5
shiny::runApp('Github/DL Mapper')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
shiny::runApp('Github/Natural-Mortality-Tool')
?with
with(mtcars, mpg[cyl == 8  &  disp > 350])
mtcars$mpg[mpg[cyl == 8  &  disp > 350]
}
mtcars$mpg[mtcars$mpg[cyl == 8  &  disp > 350]]
mtcars$mpg[mtcars$cyl == 8  &  disp > 350]
mtcars$mpg[mtcars$cyl == 8  &  mtcars$cyldisp > 350]
mtcars$cyl == 8
mtcars$cyldisp > 350
mtcars$cyldisp > 350
mtcars$mpg[mtcars$cyl == 8  &  mtcars$disp > 350]
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
shiny::runApp('Github/SS-DL-tool')
icon("", verify_fa = FALSE)
icon("play-circle", verify_fa = FALSE)
?actionButton
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
runApp('Github/SS-DL-tool')
seq(0.024,0.044,0.4)
seq(0.024,0.044,0.04)
seq(0.024,0.044,0.004)
seq(0.024,0.044,0.002)
runApp('Github/SS-DL-tool')
205/5
runApp('Github/Natural-Mortality-Tool')
runApp('Github/Natural-Mortality-Tool')
shiny::runApp('Github/Natural-Mortality-Tool')
#' Get FishLife life history traits
#'
#' Retrieves life history trait predictions from FishLife (Thorson et al. 2018). This
#' is a wrapper for the Plot_taxa() function in the FishLife R package.
#'
#' @param species A character vector of species scientific names
#' @return A dataframe with life history trait predictions from FishLife for each species
#' @examples
#' # Look up life history traits
#' species <- c("Gadus morhua", "Centropristis striata", "Paralichthys dentatus")
#' fishlife(species)
#' @export
fishlife <- function(species){
# Setup container
spp <- sort(unique(species))
fl <- data.frame(species=spp, linf_cm=NA, k=NA, winf_g=NA, tmax_yr=NA, tmat_yr=NA,
m=NA, lmat_cm=NA, temp_c=NA, stringsAsFactors=F)
# Loop through species
for(i in 1:nrow(fl)){
# Get spp info
sciname <- fl$species[i]
genus <- stringr::word(sciname, 1)
nwords_in_spp <- length(strsplit(sciname, " ")[[1]])
species <- stringr::word(sciname, start=2, end=nwords_in_spp)
species <- ifelse(species=="spp", "predictive", species)
# Try looking up in FishLife
spp_info <- try(FishLife::Plot_taxa(FishLife::Search_species(Genus=genus, Species=species)$match_taxonomy,mfrow=c(2,2)))
if(inherits(spp_info, "try-error")){
# Record blanks
#      fl[i,2:ncol(fl)] <- rep(NA, ncol(fl)-1)
}else{
# Values are in log-scale except temperature
spp_lh_vals_log <- spp_info[[1]]$Mean_pred
spp_lh_vals <- c(exp(spp_lh_vals_log[1:7]), spp_lh_vals_log[8],spp_lh_vals_log[9:20])
#     fl[i,2:ncol(fl)] <- spp_lh_vals
}
}
log_sd<-sqrt(diag(spp_info[[1]]$Cov_pred))
LH.out<-list(Median=spp_lh_vals,CV=log_sd)
# Return
#  return(fl)
return(LH.out)
}
fishlife("Sebastes mystinus")
runApp('Github/Natural-Mortality-Tool')
install.packages(c("bibtex", "brew", "classInt", "cli", "crayon", "datawizard", "dotCall64", "duckdb", "Exact", "fGarch", "flextable", "forecast", "foreign", "ggforce", "ggridges", "igraph", "insight", "irlba", "ISOcodes", "jsonlite", "memisc", "mnormt", "nnet", "orthopolynom", "pracma", "psych", "ragg", "RcppArmadillo", "RCurl", "readr", "rgl", "rlang", "RSQLite", "spdep", "timeDate", "tinytex", "tokenizers", "vctrs", "vroom", "webshot", "XML"))
install.packages(c("bibtex", "brew", "classInt", "cli", "crayon", "datawizard", "dotCall64", "duckdb", "Exact", "fGarch", "flextable", "forecast", "foreign", "ggforce", "ggridges", "igraph", "insight", "irlba", "ISOcodes", "jsonlite", "memisc", "mnormt", "nnet", "orthopolynom", "pracma", "psych", "ragg", "RcppArmadillo", "RCurl", "readr", "rgl", "rlang", "RSQLite", "spdep", "timeDate", "tinytex", "tokenizers", "vctrs", "vroom", "webshot", "XML"))
shiny::runApp('Github/Natural-Mortality-Tool')
install.packages("harfbuzz")
install.packages("fribidi")
runApp('Github/Natural-Mortality-Tool')
library(FishLife)
runApp('Github/Natural-Mortality-Tool')
